[workspace]
resolver = "2"

members = [
    "api",
    "api/openapi-spec-generator",
    "api/test-context",
    "api/types",
    "diem-move/diem-aggregator",
    "diem-move/diem-debugger",
    "diem-move/diem-gas",
    "diem-move/diem-gas-profiling",
    "diem-move/diem-release-builder",
    "diem-move/diem-resource-viewer",
    "diem-move/diem-sdk-builder",
    "diem-move/diem-transaction-benchmarks",
    "diem-move/diem-transactional-test-harness",
    "diem-move/diem-validator-interface",
    "diem-move/diem-vm",
    "diem-move/diem-vm-logging",
    "diem-move/diem-vm-profiling",
    "diem-move/diem-vm-types",
    "diem-move/block-executor",
    "diem-move/e2e-move-tests",
    "diem-move/e2e-tests",
    "diem-move/e2e-testsuite",
    "diem-move/framework",
    "diem-move/framework/cached-packages",
    "diem-move/gas-algebra-ext",
    "diem-move/move-examples",
    "diem-move/mvhashmap",
    "diem-move/package-builder",
    "diem-move/vm-genesis",
    "diem-move/writeset-transaction-generator",
    "diem-node",
    "diem-utils",
    "config",
    "config/global-constants",
    "consensus",
    "consensus/consensus-types",
    "consensus/safety-rules",
    "crates/diem",
    "crates/diem-bitvec",
    "crates/diem-build-info",
    "crates/diem-compression",
    "crates/diem-crypto",
    "crates/diem-crypto-derive",
    "crates/diem-enum-conversion-derive",
    "crates/diem-faucet/cli",
    "crates/diem-faucet/core",
    "crates/diem-faucet/metrics-server",
    "crates/diem-faucet/service",
    "crates/diem-genesis",
    "crates/diem-github-client",
    "crates/diem-id-generator",
    "crates/diem-infallible",
    "crates/diem-inspection-service",
    "crates/diem-keygen",
    "crates/diem-ledger",
    "crates/diem-log-derive",
    "crates/diem-logger",
    "crates/diem-metrics-core",
    "crates/diem-network-checker",
    "crates/diem-node-identity",
    "crates/diem-openapi",
    "crates/diem-proptest-helpers",
    "crates/diem-push-metrics",
    "crates/diem-rate-limiter",
    "crates/diem-rest-client",
    "crates/diem-retrier",
    "crates/diem-rosetta",
    "crates/diem-rosetta-cli",
    "crates/diem-runtimes",
    "crates/diem-speculative-state-helper",
    # "crates/diem-telemetry",
    # "crates/diem-telemetry-service",
    "crates/diem-temppath",
    "crates/diem-time-service",
    "crates/diem-warp-webserver",
    "crates/bounded-executor",
    "crates/channel",
    "crates/crash-handler",
    "crates/fallible",
    "crates/indexer",
    "crates/moving-average",
    "crates/node-resource-metrics",
    "crates/num-variants",
    "crates/proxy",
    "crates/short-hex-str",
    "crates/transaction-emitter",
    "crates/transaction-emitter-lib",
    "crates/transaction-generator-lib",
    "ecosystem/indexer-grpc/indexer-grpc-cache-worker",
    "ecosystem/indexer-grpc/indexer-grpc-data-service",
    "ecosystem/indexer-grpc/indexer-grpc-file-store",
    "ecosystem/indexer-grpc/indexer-grpc-fullnode",
    "ecosystem/indexer-grpc/indexer-grpc-integration-tests",
    "ecosystem/indexer-grpc/indexer-grpc-parser",
    "ecosystem/indexer-grpc/indexer-grpc-post-processor",
    "ecosystem/indexer-grpc/indexer-grpc-server-framework",
    "ecosystem/indexer-grpc/indexer-grpc-utils",
    "ecosystem/node-checker",
    "ecosystem/node-checker/fn-check-client",
    "execution/block-partitioner",
    "execution/db-bootstrapper",
    "execution/executor",
    "execution/executor-benchmark",
    "execution/executor-service",
    "execution/executor-test-helpers",
    "execution/executor-types",
    "mempool",
    "network",
    "network/builder",
    "network/discovery",
    "network/memsocket",
    "network/netcore",
    "network/peer-monitoring-service/client",
    "network/peer-monitoring-service/server",
    "network/peer-monitoring-service/types",
    "sdk",
    "secure/net",
    "secure/storage",
    "secure/storage/vault",
    "state-sync/diem-data-client",
    "state-sync/inter-component/consensus-notifications",
    "state-sync/inter-component/event-notifications",
    "state-sync/inter-component/mempool-notifications",
    "state-sync/state-sync-v2/data-streaming-service",
    "state-sync/state-sync-v2/state-sync-driver",
    "state-sync/storage-service/client",
    "state-sync/storage-service/server",
    "state-sync/storage-service/types",
    "storage/accumulator",
    "storage/diemdb",
    "storage/backup/backup-cli",
    "storage/backup/backup-service",
    "storage/db-tool",
    "storage/executable-store",
    "storage/indexer",
    "storage/jellyfish-merkle",
    "storage/rocksdb-options",
    "storage/schemadb",
    "storage/scratchpad",
    "storage/state-view",
    "storage/storage-interface",
    "testsuite/diem-fuzzer",
    "testsuite/diem-fuzzer/fuzz",
    "testsuite/dos/http_test",
    "testsuite/dos/listener",
    "testsuite/dos/sender",
    "testsuite/forge",
    "testsuite/forge-cli",
    "testsuite/fuzzer",
    "testsuite/fuzzer/fuzz",
    "testsuite/generate-format",
    "testsuite/module-publish",
    "testsuite/smoke-test",
    "testsuite/testcases",

    # third_party/move
    "third_party/move/extensions/async/move-async-vm",
    "third_party/move/extensions/move-table-extension",
    "third_party/move/move-analyzer",
    "third_party/move/move-binary-format",
    "third_party/move/move-binary-format/serializer-tests",
    "third_party/move/move-borrow-graph",
    "third_party/move/move-bytecode-verifier",
    "third_party/move/move-bytecode-verifier/bytecode-verifier-tests",
    "third_party/move/move-bytecode-verifier/fuzz",
    "third_party/move/move-bytecode-verifier/invalid-mutations",
    "third_party/move/move-bytecode-verifier/transactional-tests",
    "third_party/move/move-command-line-common",
    "third_party/move/move-compiler",
    "third_party/move/move-compiler-v2",
    "third_party/move/move-compiler/transactional-tests",
    "third_party/move/move-core/types",
    "third_party/move/move-ir-compiler",
    "third_party/move/move-ir-compiler/move-bytecode-source-map",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode/syntax",
    "third_party/move/move-ir-compiler/transactional-tests",
    "third_party/move/move-ir/types",
    "third_party/move/move-model",
    "third_party/move/move-prover",
    "third_party/move/move-prover/boogie-backend",
    "third_party/move/move-prover/bytecode",
    "third_party/move/move-prover/move-abigen",
    "third_party/move/move-prover/move-docgen",
    "third_party/move/move-prover/move-errmapgen",
    "third_party/move/move-prover/test-utils",
    "third_party/move/move-symbol-pool",
    "third_party/move/move-vm/integration-tests",
    "third_party/move/move-vm/paranoid-tests",
    "third_party/move/move-vm/runtime",
    "third_party/move/move-vm/test-utils",
    "third_party/move/move-vm/transactional-tests",
    "third_party/move/move-vm/types",
    "third_party/move/testing-infra/module-generation",
    "third_party/move/testing-infra/test-generation",
    "third_party/move/testing-infra/transactional-test-runner",
    "third_party/move/tools/move-bytecode-utils",
    "third_party/move/tools/move-bytecode-viewer",
    "third_party/move/tools/move-cli",
    "third_party/move/tools/move-coverage",
    "third_party/move/tools/move-disassembler",
    "third_party/move/tools/move-explain",
    "third_party/move/tools/move-package",
    "third_party/move/tools/move-resource-viewer",
    "third_party/move/tools/move-unit-test",
    "types",
    "vm-validator",
]

exclude = ["crates/diem-protos"]

# NOTE: default-members is the complete list of binaries that form the "production Diem codebase". These members should
# never include crates that require fuzzing features or test features. These are the crates we want built with no extra
# test-only code included.
#
# For more, see the "Conditional compilation for tests" section in documentation/coding_guidelines.md.
default-members = [
    "diem-node",
    "consensus/safety-rules",
    "crates/diem",
    "crates/diem-faucet/service",
    "crates/diem-keygen",
    "crates/diem-rate-limiter",
    "crates/diem-rosetta",
    "crates/transaction-emitter",
    "diem-move/framework",
    "execution/db-bootstrapper",
    "storage/backup/backup-cli",
    "ecosystem/node-checker",
]

# All workspace members should inherit these keys
# for package declarations.
[workspace.package]
authors = ["Diem Labs <opensource@diemlabs.com>"]
edition = "2021"
homepage = "https://diemlabs.com"
license = "Apache-2.0"
publish = false
repository = "https://github.com/aptos-labs/diem-core"
rust-version = "1.70"

[workspace.dependencies]
# Internal crate dependencies.
# Please do not add any test features here: they should be declared by the individual crate.
diem = { path = "crates/diem" }
diem-accumulator = { path = "storage/accumulator" }
diem-aggregator = { path = "diem-move/diem-aggregator" }
diem-api = { path = "api" }
diem-api-test-context = { path = "api/test-context" }
diem-api-types = { path = "api/types" }
diem-backup-cli = { path = "storage/backup/backup-cli" }
diem-backup-service = { path = "storage/backup/backup-service" }
diem-bounded-executor = { path = "crates/bounded-executor" }
diem-block-executor = { path = "diem-move/block-executor" }
diem-bitvec = { path = "crates/diem-bitvec" }
diem-build-info = { path = "crates/diem-build-info" }
diem-cached-packages = { path = "diem-move/framework/cached-packages" }
diem-channels = { path = "crates/channel" }
diem-cli-common = { path = "crates/diem-cli-common" }
diem-compression = { path = "crates/diem-compression" }
diem-consensus = { path = "consensus" }
diem-consensus-notifications = { path = "state-sync/inter-component/consensus-notifications" }
diem-consensus-types = { path = "consensus/consensus-types" }
diem-config = { path = "config" }
diem-crash-handler = { path = "crates/crash-handler" }
diem-crypto = { path = "crates/diem-crypto" }
diem-crypto-derive = { path = "crates/diem-crypto-derive" }
diem-data-client = { path = "state-sync/diem-data-client" }
diem-data-streaming-service = { path = "state-sync/state-sync-v2/data-streaming-service" }
diem-db = { path = "storage/diemdb" }
diem-db-indexer = { path = "storage/indexer" }
diem-db-tool = { path = "storage/db-tool" }
diem-debugger = { path = "diem-move/diem-debugger" }
diem-event-notifications = { path = "state-sync/inter-component/event-notifications" }
diem-executable-store = { path = "storage/executable-store" }
diem-executor = { path = "execution/executor" }
diem-block-partitioner = { path = "execution/block-partitioner" }
diem-enum-conversion-derive = { path = "crates/diem-enum-conversion-derive" }
diem-executor-service = { path = "execution/executor-service" }
diem-executor-test-helpers = { path = "execution/executor-test-helpers" }
diem-executor-types = { path = "execution/executor-types" }
diem-faucet-cli = { path = "crates/diem-faucet/cli" }
diem-faucet-core = { path = "crates/diem-faucet/core" }
diem-faucet-service = { path = "crates/diem-faucet/service" }
diem-faucet-metrics-server = { path = "crates/diem-faucet/metrics-server" }
diem-fallible = { path = "crates/fallible" }
diem-forge = { path = "testsuite/forge" }
diem-framework = { path = "diem-move/framework" }
diem-fuzzer = { path = "testsuite/diem-fuzzer" }
fuzzer = { path = "testsuite/fuzzer" }
diem-gas = { path = "diem-move/diem-gas" }
diem-gas-algebra-ext = { path = "diem-move/gas-algebra-ext" }
diem-gas-profiling = { path = "diem-move/diem-gas-profiling" }
diem-genesis = { path = "crates/diem-genesis" }
diem-github-client = { path = "crates/diem-github-client" }
diem-global-constants = { path = "config/global-constants" }
diem-id-generator = { path = "crates/diem-id-generator" }
diem-indexer = { path = "crates/indexer" }
diem-indexer-grpc-cache-worker = { path = "ecosystem/indexer-grpc/indexer-grpc-cache-worker" }
diem-indexer-grpc-data-service = { path = "ecosystem/indexer-grpc/indexer-grpc-data-service" }
diem-indexer-grpc-file-store = { path = "ecosystem/indexer-grpc/indexer-grpc-file-store" }
diem-indexer-grpc-post-processor = { path = "ecosystem/indexer-grpc/indexer-grpc-post-processor" }
diem-indexer-grpc-fullnode = { path = "ecosystem/indexer-grpc/indexer-grpc-fullnode" }
diem-indexer-grpc-utils = { path = "ecosystem/indexer-grpc/indexer-grpc-utils" }
diem-indexer-grpc-parser = { path = "ecosystem/indexer-grpc/indexer-grpc-parser" }
diem-indexer-grpc-server-framework = { path = "ecosystem/indexer-grpc/indexer-grpc-server-framework" }
diem-infallible = { path = "crates/diem-infallible" }
diem-inspection-service = { path = "crates/diem-inspection-service" }
diem-jellyfish-merkle = { path = "storage/jellyfish-merkle" }
diem-keygen = { path = "crates/diem-keygen" }
diem-language-e2e-tests = { path = "diem-move/e2e-tests" }
diem-ledger = { path = "crates/diem-ledger" }
diem-log-derive = { path = "crates/diem-log-derive" }
diem-logger = { path = "crates/diem-logger" }
diem-mempool = { path = "mempool" }
diem-mempool-notifications = { path = "state-sync/inter-component/mempool-notifications" }
diem-memsocket = { path = "network/memsocket" }
diem-metrics-core = { path = "crates/diem-metrics-core" }
diem-move-examples = { path = "diem-move/move-examples" }
diem-moving-average = { path = "crates/moving-average" }
diem-mvhashmap = { path = "diem-move/mvhashmap" }
diem-netcore = { path = "network/netcore" }
diem-network = { path = "network" }
diem-network-builder = { path = "network/builder" }
diem-network-checker = { path = "crates/diem-network-checker" }
diem-network-discovery = { path = "network/discovery" }
diem-node = { path = "diem-node" }
diem-node-checker = { path = "ecosystem/node-checker" }
diem-node-identity = { path = "crates/diem-node-identity" }
diem-node-resource-metrics = { path = "crates/node-resource-metrics" }
diem-num-variants = { path = "crates/num-variants" }
diem-openapi = { path = "crates/diem-openapi" }
diem-package-builder = { path = "diem-move/package-builder" }
diem-peer-monitoring-service-client = { path = "network/peer-monitoring-service/client" }
diem-peer-monitoring-service-server = { path = "network/peer-monitoring-service/server" }
diem-peer-monitoring-service-types = { path = "network/peer-monitoring-service/types" }
diem-proptest-helpers = { path = "crates/diem-proptest-helpers" }
diem-protos = { path = "crates/diem-protos" }
diem-proxy = { path = "crates/proxy" }
diem-push-metrics = { path = "crates/diem-push-metrics" }
diem-rate-limiter = { path = "crates/diem-rate-limiter" }
diem-release-builder = { path = "diem-move/diem-release-builder" }
diem-resource-viewer = { path = "diem-move/diem-resource-viewer" }
diem-rest-client = { path = "crates/diem-rest-client" }
diem-retrier = { path = "crates/diem-retrier" }
diem-rocksdb-options = { path = "storage/rocksdb-options" }
diem-rosetta = { path = "crates/diem-rosetta" }
diem-runtimes = { path = "crates/diem-runtimes" }
diem-safety-rules = { path = "consensus/safety-rules" }
diem-schemadb = { path = "storage/schemadb" }
diem-scratchpad = { path = "storage/scratchpad" }
diem-sdk = { path = "sdk" }
diem-sdk-builder = { path = "diem-move/diem-sdk-builder" }
diem-secure-net = { path = "secure/net" }
diem-secure-storage = { path = "secure/storage" }
diem-short-hex-str = { path = "crates/short-hex-str" }
diem-speculative-state-helper = { path = "crates/diem-speculative-state-helper" }
diem-state-sync-driver = { path = "state-sync/state-sync-v2/state-sync-driver" }
diem-state-view = { path = "storage/state-view" }
diem-storage-interface = { path = "storage/storage-interface" }
diem-storage-service-client = { path = "state-sync/storage-service/client" }
diem-storage-service-types = { path = "state-sync/storage-service/types" }
diem-storage-service-server = { path = "state-sync/storage-service/server" }
# diem-telemetry = { path = "crates/diem-telemetry" }
# diem-telemetry-service = { path = "crates/diem-telemetry-service" }
diem-temppath = { path = "crates/diem-temppath" }
diem-testcases = { path = "testsuite/testcases" }
diem-time-service = { path = "crates/diem-time-service", features = [
    "async",
] }
diem-transaction-emitter-lib = { path = "crates/transaction-emitter-lib" }
diem-transaction-generator-lib = { path = "crates/transaction-generator-lib" }
diem-transactional-test-harness = { path = "diem-move/diem-transactional-test-harness" }
diem-types = { path = "types" }
diem-utils = { path = "diem-utils" }
diem-validator-interface = { path = "diem-move/diem-validator-interface" }
diem-vault-client = { path = "secure/storage/vault" }
diem-vm = { path = "diem-move/diem-vm" }
diem-vm-logging = { path = "diem-move/diem-vm-logging" }
diem-vm-genesis = { path = "diem-move/vm-genesis" }
diem-vm-types = { path = "diem-move/diem-vm-types" }
diem-vm-validator = { path = "vm-validator" }
diem-warp-webserver = { path = "crates/diem-warp-webserver" }
diem-writeset-generator = { path = "diem-move/writeset-transaction-generator" }

# External crate dependencies.
# Please do not add any test features here: they should be declared by the individual crate.
again = "0.1.2"
anyhow = "1.0.62"
anstyle = "1.0.1"
arc-swap = "1.5.0"
arr_macro = "0.1.3"
ark-bls12-381 = "0.4.0"
ark-ec = "0.4.0"
ark-ff = "0.4.0"
ark-serialize = "0.4.0"
ark-std = { version = "0.4.0", features = ["getrandom"] }
assert_approx_eq = "1.1.0"
assert_unordered = "0.1.1"
async-stream = "0.3"
async-trait = "0.1.53"
axum = "0.5.16"
base64 = "0.13.0"
backoff = { version = "0.4.0", features = ["tokio"] }
backtrace = "0.3.58"
bcs = { git = "https://github.com/aptos-labs/bcs.git", rev = "d31fab9d81748e2594be5cd5cdf845786a30562d" }
better_any = "0.1.1"
bigdecimal = { version = "0.3.0", features = ["serde"] }
bitvec = "0.19.4"
blake2 = "0.10.4"
blake2-rfc = "0.2.18"
blst = "0.3.7"
byteorder = "1.4.3"
bytes = "1.1.0"
chrono = { version = "0.4.19", features = ["clock", "serde"] }
cfg_block = "0.1.1"
cfg-if = "1.0.0"
claims = "0.7"
clap = { version = "4.3.5", features = ["derive", "unstable-styles"] }
clap_complete = "4.3.1"
cloud-storage = { version = "0.11.1", features = ["global-client"] }
codespan-reporting = "0.11.1"
console-subscriber = "0.1.8"
const_format = "0.2.26"
criterion = "0.3.5"
criterion-cpu-time = "0.1.0"
crossbeam = "0.8.1"
crossbeam-channel = "0.5.4"
csv = "1.2.1"
curve25519-dalek = "3"
dashmap = "5.2.0"
datatest-stable = "0.1.1"
debug-ignore = { version = "1.0.3", features = ["serde"] }
derivative = "2.2.0"
diesel = { version = "2.1.0", features = [
    "chrono",
    "postgres",
    "r2d2",
    "numeric",
    "serde_json",
] }
diesel_migrations = { version = "2.1.0", features = ["postgres"] }
digest = "0.9.0"
dir-diff = "0.3.2"
dirs = "4.0.0"
ed25519-dalek = { version = "1.0.1", features = ["std", "serde"] }
ed25519-dalek-bip32 = "0.2.0"
either = "1.6.1"
enum_dispatch = "0.3.8"
env_logger = "0.9.0"
erased-serde = "0.3.13"
event-listener = "2.5.3"
fail = "0.5.0"
field_count = "0.1.1"
flate2 = "1.0.24"
fs_extra = "1.2.0"
futures = "0.3.29"
futures-channel = "0.3.29"
futures-core = "0.3.29"
futures-util = "0.3.29"
gcp-bigquery-client = "0.13.0"
get_if_addrs = "0.5.3"
git2 = "0.16.1"
git-version = "0.3.5"
glob = "0.3.0"
goldenfile = "1.1.0"
handlebars = "4.2.2"
heck = "0.3.2"
hex = "0.4.3"
hkdf = "0.10.0"
hostname = "0.3.1"
http = "0.2.3"
httpmock = "0.6"
hyper = { version = "0.14.18", features = ["full"] }
hyper-tls = "0.5.0"
include_dir = { version = "0.7.2", features = ["glob"] }
indicatif = "0.15.0"
indoc = "1.0.6"
inferno = "0.11.14"
ipnet = "2.5.0"
itertools = "0.10.3"
jemallocator = { version = "0.3.2", features = [
    "profiling",
    "unprefixed_malloc_on_supported_platforms",
] }
json-patch = "0.2.6"
jsonwebtoken = "8.1"
libfuzzer-sys = "0.4.6"
libsecp256k1 = "0.7.0"
log = "0.4.17"
lru = "0.7.5"
lz4 = "1.24.0"
maplit = "1.0.2"
mime = "0.3.16"
mirai-annotations = "1.12.0"
mockall = "0.11.0"
more-asserts = "0.3.0"
native-tls = "0.2.10"
ntest = "0.9.0"
num_cpus = "1.13.1"
num-derive = "0.3.3"
num-traits = "0.2.15"
once_cell = "1.10.0"
ouroboros = "0.15.6"
owo-colors = "3.5.0"
parking_lot = "0.12.0"
paste = "1.0.7"
pbjson = "0.4.0"
percent-encoding = "2.1.0"
pin-project = "1.0.10"
poem = { version = "=1.3.55", features = ["anyhow", "rustls"] }
poem-openapi = { version = "=2.0.11", features = ["swagger-ui", "url"] }
poem-openapi-derive = "=2.0.11"
pretty_assertions = "1.2.1"
procfs = "0.14.1"
proc-macro2 = "1.0.38"
project-root = "0.2.2"
prometheus = { version = "0.13.0", default-features = false }
prometheus-http-query = "0.5.2"
prometheus-parse = "0.2.4"
proptest = "1.0.0"
proptest-derive = "0.3.0"
prost = "0.11.3"
prost-types = "0.10.1"
quanta = "0.10.1"
quote = "1.0.18"
rand = "0.7.3"
rand_core = "0.5.1"
random_word = "0.3.0"
rayon = "1.5.2"
redis = { version = "0.22.3", features = ["tokio-comp", "script"] }
redis-test = { version = "0.1.1", features = ["aio"] }
regex = "1.5.5"
reqwest = { version = "0.11.11", features = [
    "blocking",
    "cookies",
    "json",
    "stream",
] }
reqwest-middleware = "0.2.0"
reqwest-retry = "0.2.1"
ring = { version = "0.16.20", features = ["std"] }
ripemd = "0.1.1"
rocksdb = { version = "0.21.0", features = ["lz4"] }
rstest = "0.15.0"
rusty-fork = "0.3.0"
sha-1 = "0.10.0"
sha2 = "0.9.3"
sha2_0_10_6 = { package = "sha2", version = "0.10.6" }
sha3 = "0.9.1"
siphasher = "0.3.10"
serde = { version = "1.0.137", features = ["derive", "rc"] }
serde_bytes = "0.11.6"
serde_json = { version = "1.0.81", features = ["preserve_order"] }
serde_repr = "0.1"
serde_merge = "0.1.3"
serde-name = "0.1.1"
serde-generate = { git = "https://github.com/aptos-labs/serde-reflection", rev = "839aed62a20ddccf043c08961cfe74875741ccba" }
serde-reflection = { git = "https://github.com/aptos-labs/serde-reflection", rev = "839aed62a20ddccf043c08961cfe74875741ccba" }
serde_yaml = "0.8.24"
shadow-rs = "0.16.2"
smallvec = "1.8.0"
static_assertions = "1.1.0"
stats_alloc = "0.1.8"
status-line = "0.2.0"
strum = "0.24.1"
strum_macros = "0.24.2"
structopt = "0.3.21"
substreams = "0.0.17"
syn = { version = "1.0.92", features = ["derive", "extra-traits"] }
sysinfo = "0.28.4"
tempfile = "3.3.0"
termcolor = "1.1.2"
textwrap = "0.15.0"
thiserror = "1.0.37"
tiny-bip39 = "0.8.2"
tiny-keccak = { version = "2.0.2", features = ["keccak", "sha3"] }
tracing = "0.1.34"
tracing-subscriber = { version = "0.3.17", features = ["json", "env-filter"] }
trybuild = "1.0.70"
tokio = { version = "1.21.0", features = ["full"] }
tokio-io-timeout = "1.2.0"
tokio-metrics = "0.1.0"
tokio-retry = "0.3.0"
tokio-stream = "0.1.8"
tokio-test = "0.4.1"
tokio-util = { version = "0.7.2", features = ["compat", "codec"] }
toml = "0.5.9"
tonic = { version = "0.8.3", features = [
    "tls-roots",
    "transport",
    "prost",
    "gzip",
    "codegen",
] }
tonic-reflection = "0.6.0"
ureq = { version = "1.5.4", features = [
    "json",
    "native-tls",
], default_features = false }
url = { version = "2.2.2", features = ["serde"] }
uuid = { version = "1.0.0", features = ["v4", "serde"] }
walkdir = "2.3.2"
warp = { version = "0.3.3", features = ["tls"] }
warp-reverse-proxy = "0.5.0"
which = "4.2.5"
x25519-dalek = "1.2.0"

# MOVE DEPENDENCIES
move-abigen = { path = "third_party/move/move-prover/move-abigen" }
move-binary-format = { path = "third_party/move/move-binary-format" }
move-bytecode-verifier = { path = "third_party/move/move-bytecode-verifier" }
move-bytecode-utils = { path = "third_party/move/tools/move-bytecode-utils" }
move-cli = { path = "third_party/move/tools/move-cli" }
move-command-line-common = { path = "third_party/move/move-command-line-common" }
move-coverage = { path = "third_party/move/tools/move-coverage" }
move-compiler = { path = "third_party/move/move-compiler" }
move-compiler-v2 = { path = "third_party/move/move-compiler-v2" }
move-core-types = { path = "third_party/move/move-core/types" }
move-docgen = { path = "third_party/move/move-prover/move-docgen" }
move-disassembler = { path = "third_party/move/tools/move-disassembler" }
move-ir-types = { path = "third_party/move/move-ir/types" }
move-ir-compiler = { path = "third_party/move/move-ir-compiler" }
move-bytecode-source-map = { path = "third_party/move/move-ir-compiler/move-bytecode-source-map" }
move-model = { path = "third_party/move/move-model" }
move-package = { path = "third_party/move/tools/move-package" }
move-prover = { path = "third_party/move/move-prover" }
move-prover-boogie-backend = { path = "third_party/move/move-prover/boogie-backend" }
move-stackless-bytecode = { path = "third_party/move/move-prover/bytecode" }
diem-move-stdlib = { path = "diem-move/framework/move-stdlib" }
move-prover-test-utils = { path = "third_party/move/move-prover/test-utils" }
move-resource-viewer = { path = "third_party/move/tools/move-resource-viewer" }
move-symbol-pool = { path = "third_party/move/move-symbol-pool" }
move-table-extension = { path = "third_party/move/extensions/move-table-extension" }
move-transactional-test-runner = { path = "third_party/move/testing-infra/transactional-test-runner" }
move-unit-test = { path = "third_party/move/tools/move-unit-test", features = [
    "table-extension",
] }
move-vm-runtime = { path = "third_party/move/move-vm/runtime" }
move-vm-test-utils = { path = "third_party/move/move-vm/test-utils", features = [
    "table-extension",
] }
move-vm-types = { path = "third_party/move/move-vm/types" }

[profile.release]
debug = true
overflow-checks = true

# The performance build is not currently recommended
# for production deployments. It has not been widely tested.
[profile.performance]
inherits = "release"
opt-level = 3
debug = true
overflow-checks = true
lto = "thin"
codegen-units = 1

[profile.cli]
inherits = "release"
debug = false
opt-level = "z"
lto = "thin"
strip = true
codegen-units = 1

[profile.bench]
debug = true

# This is a temporary workaround to avoid multiple library
# definitions for LZ4 (caused by rust-rocksdb).
# This will be removed once our pull requests land.
# https://github.com/rust-rocksdb/rust-rocksdb/issues/666
[patch.crates-io]
serde-reflection = { git = "https://github.com/aptos-labs/serde-reflection", rev = "839aed62a20ddccf043c08961cfe74875741ccba" }
